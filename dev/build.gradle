plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.15'
}

final BUILD_TIME = "${new Date().format('yyyyMMddHHmm')}"

def versionProperties = new Properties()
file('src/main/resources/install-version.properties').withInputStream {
    stream -> versionProperties.load(stream)
}

group 'org.eclipse.codewind.intellij'
version versionProperties.getProperty('install-version') + '-' + BUILD_TIME

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    corelibs
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    corelibs "io.socket:engine.io-client:1.0.0"
    corelibs "com.squareup.okhttp3:okhttp:3.8.1"
    corelibs "com.squareup.okio:okio:1.13.0"
    corelibs "io.socket:socket.io-client:1.0.0"

    implementation fileTree(dir: 'src/main/lib', include: ['*.jar'])
}

class Download extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File target

    @TaskAction
    void download() {
        if (!target.exists()) {
            println("Downloading $sourceUrl")
            ant.get(src: sourceUrl, dest: target)
        }
    }
}

def excludeJson = 'json-20090211.jar'

task downloadJson(type: Download) {
    sourceUrl = 'https://download.eclipse.org/tools/orbit/downloads/drops/R20190726180751/repository/plugins/org.json_1.0.0.v201011060100.jar'
    target = file('src/main/lib/org.json_1.0.0.v201011060100.jar')
}

task downloadFileWatchers(type: Download) {
    sourceUrl = 'http://archive.eclipse.org/codewind/codewind-eclipse/master/latest/codewind.zip'
    target = file('src/main/lib/codewind.zip')
}

task copyFileWatchers(type: Copy, dependsOn: 'downloadFileWatchers') {
    from(zipTree("src/main/lib/codewind.zip")) {
        include "plugins/org.eclipse.codewind.filewatchers.standalonenio_*"  
        include "plugins/org.eclipse.codewind.filewatchers.core_*"  

        eachFile { fcd ->
            fcd.relativePath = new RelativePath(true, fcd.relativePath.segments.drop(1))  
        }
        includeEmptyDirs = false  
    }
    into "src/main/lib"
}

task deleteFiles(type: Delete) {
    delete fileTree("src/main/lib").matching {
        include "codewind.zip"
    }
}

task copyDependencies(type: Copy) {
    from configurations.corelibs {
        exclude excludeJson
    }
    into 'src/main/lib'
}

copyDependencies.finalizedBy downloadJson, copyFileWatchers
copyFileWatchers.finalizedBy deleteFiles

defaultTasks 'copyDependencies', 'compileJava'

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2020.1.1'
    updateSinceUntilBuild false
    plugins = ['java', 'maven', 'terminal']
}
